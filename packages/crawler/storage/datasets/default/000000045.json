{
	"title": "Quickstart tutorial - OpenAI API",
	"url": "https://platform.openai.com/docs/quickstart/quickstart-language-selection?context=python",
	"html": "Overview\nDocumentation\nAPI reference\nExamples\nLog in\nSign up‍\nSearch\n⌘\nK\nGET STARTED\nIntroduction\nQuickstart\nModels\nTutorials\nChangelog\nCAPABILITIES\nText generation\nFunction calling\nEmbeddings\nFine-tuning\nImage generation\nVision\nText-to-speech\nSpeech-to-text\nModeration\nASSISTANTS\nOverview\nHow Assistants work\nTools\nGUIDES\nPrompt engineering\nProduction best practices\nSafety best practices\nRate limits\nError codes\nLibraries\nDeprecations\nPolicies\nCHATGPT\nActions\nPlugins\nDeveloper quickstart\nGet up and running with the OpenAI API\nLooking for ChatGPT? Head to chat.openai.com.\n\nThe OpenAI API provides a simple interface for developers to create an intelligence layer in their applications, powered by OpenAI's state of the art models. The Chat Completions endpoint powers ChatGPT and provides a simple way to take text as input and use a model like GPT-4 to generate an output.\n\nWant to jump straight to the code?\nSkip the quickstart and dive into the API reference.\n\n\n\nThis quickstart is designed to help get your local development environment setup and send your first API request. If you are an experienced developer or want to just dive into using the OpenAI API, the API reference of GPT guide are a great place to start. Throughout this quickstart, you will learn:\n\nHow to setup your development environment\nHow to install the latest SDKs\nSome of the basic concepts of the OpenAI API\nHow to send your first API request\n\nIf you run into any challenges or have questions getting started, please join our developer forum.\n\nAccount setup\n\nFirst, create an OpenAI account or sign in. Next, navigate to the API key page and \"Create new secret key\", optionally naming the key. Make sure to save this somewhere safe and do not share it with anyone.\n\nQuickstart language selection\n\nSelect the tool or language you want to get started using the OpenAI API with.\n\ncurl‍\nPython‍\nNode.js‍\n\nPython is a popular programming language that is commonly used for data applications, web development, and many other programming tasks due to its ease of use. OpenAI provides a custom Python library which makes working with the OpenAI API in Python simple and efficient.\n\nStep 1: Setup Python\nInstall Python\nSetup a virtual environment (optional)\nInstall the OpenAI Python library\nStep 2: Setup your API key\nSetup your API key for all projects (recommended)\nSetup your API key for a single project\nStep 3: Sending your first API request\nMaking an API request\n\nAfter you have Python configured and an API key setup, the final step is to send a request to the OpenAI API using the Python library. To do this, create a file named openai-test.py using th terminal or an IDE.\n\nInside the file, copy and paste one of the examples below:\n\nChatCompletions\nSelect library\nChatCompletions\nEmbeddings\nImages\nCopy‍\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\nfrom openai import OpenAI\nclient = OpenAI()\n\ncompletion = client.chat.completions.create(\n  model=\"gpt-3.5-turbo\",\n  messages=[\n    {\"role\": \"system\", \"content\": \"You are a poetic assistant, skilled in explaining complex programming concepts with creative flair.\"},\n    {\"role\": \"user\", \"content\": \"Compose a poem that explains the concept of recursion in programming.\"}\n  ]\n)\n\nprint(completion.choices[0].message)\n\nTo run the code, enter python openai-test.py into the terminal / command line.\n\nThe Chat Completions example highlights just one area of strength for our models: creative ability. Explaining recursion (the programming topic) in a well formatted poem is something both the best developers and best poets would struggle with. In this case, gpt-3.5-turbo does it effortlessly.\n\nNext steps\n\nNow that you have made you first OpenAI API request, it is time to explore what else is possible:\n\nFor more detailed information on our models and the API, see our GPT guide.\nVisit the OpenAI Cookbook for in-depth example API use-cases, as well as code snippets for common tasks.\nWondering what OpenAI's models are capable of? Check out our library of example prompts.\nWant to try the API without writing any code? Start experimenting in the Playground.\nKeep our usage policies in mind as you start building."
}